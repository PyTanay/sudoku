[{"C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\index.js":"1","C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\reportWebVitals.js":"2","C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\App.js":"3","C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\WholeGrid.jsx":"4","C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\Utility.jsx":"5","C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\AllNumSel.jsx":"6","C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\OneRow.jsx":"7","C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\Solve.jsx":"8","C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\NumberSelector.jsx":"9","C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\SingleBox.jsx":"10"},{"size":517,"mtime":1611147647139,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1611147647140,"results":"13","hashOfConfig":"12"},{"size":3130,"mtime":1611680481132,"results":"14","hashOfConfig":"12"},{"size":4185,"mtime":1611472222615,"results":"15","hashOfConfig":"12"},{"size":966,"mtime":1611478756998,"results":"16","hashOfConfig":"12"},{"size":554,"mtime":1611408336838,"results":"17","hashOfConfig":"12"},{"size":629,"mtime":1611324810330,"results":"18","hashOfConfig":"12"},{"size":3465,"mtime":1611665420055,"results":"19","hashOfConfig":"12"},{"size":812,"mtime":1611473692011,"results":"20","hashOfConfig":"12"},{"size":4415,"mtime":1611682700675,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1mi9bpo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\index.js",[],["44","45"],"C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\reportWebVitals.js",[],"C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\App.js",[],"C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\WholeGrid.jsx",["46"],"import React,{useContext,useEffect} from 'react'\r\nimport OneRow from './OneRow'\r\nimport './wholeGrid.css'\r\nimport {AppContext} from '../App'\r\n\r\nfunction WholeGrid() {\r\n    const {selected,setSelected,value,setValue,initialValue} = useContext(AppContext)\r\n    useEffect(() => {\r\n        const changeValue=(e)=>{\r\n            if(selected.length!==0 && selected[0]!==undefined){\r\n                if(/[0-9]/.test(e.key)){\r\n                    var temp=JSON.parse(JSON.stringify(value)) //this is necessary since we have 2d array and deep copy is needed\r\n                    temp[selected[0]][selected[1]]=e.key\r\n                    setValue(temp)\r\n                }\r\n                const tempArr=['ArrowUp','ArrowLeft','ArrowDown','ArrowRight']\r\n                if(tempArr.includes(e.key)){\r\n                    e.preventDefault()\r\n                    switch (e.key) {\r\n                        case \"ArrowUp\":\r\n                            var uptemp=1;\r\n                            if(selected[0]!==0){\r\n                                while (initialValue[selected[0]-uptemp][selected[1]]!==null) {\r\n                                    (selected[0]-uptemp===0)?uptemp=0:uptemp++;\r\n                                }\r\n                            }else{\r\n                                uptemp=0;\r\n                            }\r\n                            selected[0]!==0 && setSelected([selected[0]-uptemp,selected[1]])\r\n                            break;\r\n                        case \"ArrowLeft\":\r\n                            var lefttemp=1;\r\n                            if(selected[1]!==0){\r\n                                while (initialValue[selected[0]][selected[1]-lefttemp]!==null) {\r\n                                    (selected[1]-lefttemp===0) ? lefttemp=0 : lefttemp++\r\n                                }\r\n                            }else{\r\n                                lefttemp=0;\r\n                            }\r\n                            selected[1]!==0 && setSelected([selected[0],selected[1]-lefttemp])\r\n                            break;\r\n                        case \"ArrowDown\":\r\n                            var downtemp=1;\r\n                            if(selected[0]!==8){\r\n                                while (initialValue[selected[0]+downtemp][selected[1]]!==null) {\r\n                                    (selected[0]+downtemp===8) ? downtemp=0 : downtemp++\r\n                                }\r\n                            }else{\r\n                                downtemp=0;\r\n                            }\r\n                            selected[0]!==8 && setSelected([selected[0]+downtemp,selected[1]])\r\n                            break;\r\n                        case \"ArrowRight\":\r\n                            var righttemp=1;\r\n                            if(selected[1]!==8){\r\n                                while (initialValue[selected[0]][selected[1]+righttemp]!==null) {\r\n                                    (selected[1]+righttemp===8)?righttemp=0:righttemp++;\r\n                                }\r\n                            }else{\r\n                                righttemp=0;\r\n                            }\r\n                            selected[1]!==8 && setSelected([selected[0],selected[1]+righttemp])\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                if(e.key===\"Delete\"){\r\n                    var temp1=value\r\n                    temp1[selected[0]][selected[1]]=null\r\n                    setValue([...temp1])\r\n                }\r\n                if(e.key===\"Escape\"){\r\n                    setSelected([])\r\n                }\r\n            }\r\n        }\r\n        document.addEventListener(\"keydown\",changeValue)\r\n        return ()=>{\r\n            document.removeEventListener(\"keydown\",changeValue)\r\n        }\r\n    },[selected])\r\n\r\n    return (\r\n        <div className=\"wholeGrid\">\r\n            {[...Array(9)].map((x,index)=>(index===2||index===5)?<React.Fragment key={index}><OneRow row={index}  /><div className=\"hLine\"></div></React.Fragment>:<OneRow key={index} row={index}  />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WholeGrid\r\n","C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\Utility.jsx",[],"C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\AllNumSel.jsx",[],"C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\OneRow.jsx",[],"C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\Solve.jsx",[],"C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\NumberSelector.jsx",[],"C:\\Users\\tanay\\PycharmProjects\\learning_javascript\\sudoku\\src\\components\\SingleBox.jsx",["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":82,"column":7,"nodeType":"55","endLine":82,"endColumn":17,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":16},{"ruleId":"53","severity":1,"message":"61","line":41,"column":8,"nodeType":"55","endLine":41,"endColumn":15,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initialValue', 'setSelected', 'setValue', and 'value'. Either include them or remove the dependency array.","ArrayExpression",["65"],"no-unused-vars","'confetti' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'initialValue', 'path', 'prevValue', 'props.col', 'props.row', and 'setPath'. Either include them or remove the dependency array.",["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [initialValue, selected, setSelected, setValue, value]",{"range":"71","text":"72"},"Update the dependencies array to be: [initialValue, path, prevValue, props.col, props.row, setPath, value]",{"range":"73","text":"74"},[3863,3873],"[initialValue, selected, setSelected, setValue, value]",[1735,1742],"[initialValue, path, prevValue, props.col, props.row, setPath, value]"]