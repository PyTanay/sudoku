[{"E:\\practice\\sudoku\\src\\index.js":"1","E:\\practice\\sudoku\\src\\reportWebVitals.js":"2","E:\\practice\\sudoku\\src\\App.js":"3","E:\\practice\\sudoku\\src\\components\\WholeGrid.jsx":"4","E:\\practice\\sudoku\\src\\components\\AllNumSel.jsx":"5","E:\\practice\\sudoku\\src\\components\\NumberSelector.jsx":"6","E:\\practice\\sudoku\\src\\components\\OneRow.jsx":"7","E:\\practice\\sudoku\\src\\components\\SingleBox.jsx":"8","E:\\practice\\sudoku\\src\\components\\Utility.jsx":"9","E:\\practice\\sudoku\\src\\components\\Solve.jsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":3107,"mtime":1611572369940,"results":"14","hashOfConfig":"12"},{"size":4185,"mtime":1611554878076,"results":"15","hashOfConfig":"12"},{"size":554,"mtime":1611571301042,"results":"16","hashOfConfig":"12"},{"size":812,"mtime":1611554878073,"results":"17","hashOfConfig":"12"},{"size":629,"mtime":1611379896038,"results":"18","hashOfConfig":"12"},{"size":3008,"mtime":1611554878074,"results":"19","hashOfConfig":"12"},{"size":966,"mtime":1611554878075,"results":"20","hashOfConfig":"12"},{"size":2217,"mtime":1611554878074,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1du8nig",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"E:\\practice\\sudoku\\src\\index.js",[],["45","46"],"E:\\practice\\sudoku\\src\\reportWebVitals.js",[],"E:\\practice\\sudoku\\src\\App.js",[],"E:\\practice\\sudoku\\src\\components\\WholeGrid.jsx",["47"],"import React,{useContext,useEffect} from 'react'\r\nimport OneRow from './OneRow'\r\nimport './wholeGrid.css'\r\nimport {AppContext} from '../App'\r\n\r\nfunction WholeGrid() {\r\n    const {selected,setSelected,value,setValue} = useContext(AppContext)\r\n    useEffect(() => {\r\n        const changeValue=(e)=>{\r\n            if(selected.length!==0){\r\n                if(/[0-9]/.test(e.key)){\r\n                    var temp=value\r\n                    temp[selected[0]][selected[1]]=e.key\r\n                    setValue([...temp])\r\n                }\r\n                const tempArr=['ArrowUp','ArrowLeft','ArrowDown','ArrowRight']\r\n                if(tempArr.includes(e.key)){\r\n                    switch (e.key) {\r\n                        case \"ArrowUp\":\r\n                            selected[0]!==0 && setSelected([selected[0]-1,selected[1]])\r\n                            break;\r\n                        case \"ArrowLeft\":\r\n                            selected[1]!==0 && setSelected([selected[0],selected[1]-1])\r\n                            break;\r\n                        case \"ArrowDown\":\r\n                            selected[0]!==8 && setSelected([selected[0]+1,selected[1]])\r\n                            break;\r\n                        case \"ArrowRight\":\r\n                            selected[1]!==8 && setSelected([selected[0],selected[1]+1])\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                if(e.key===\"Delete\"){\r\n                    var temp1=value\r\n                    temp1[selected[0]][selected[1]]=null\r\n                    setValue([...temp1])\r\n                }\r\n                if(e.key===\"Escape\"){\r\n                    setSelected([])\r\n                }\r\n            }\r\n        }\r\n        document.addEventListener(\"keydown\",changeValue)\r\n        return ()=>{\r\n            document.removeEventListener(\"keydown\",changeValue)\r\n        }\r\n    },[selected])\r\n\r\n    return (\r\n        <div className=\"wholeGrid\">\r\n            {[...Array(9)].map((x,index)=>(index===2||index===5)?<React.Fragment key={index}><OneRow row={index}  /><div className=\"hLine\"></div></React.Fragment>:<OneRow key={index} row={index}  />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WholeGrid\r\n","E:\\practice\\sudoku\\src\\components\\AllNumSel.jsx",[],"E:\\practice\\sudoku\\src\\components\\NumberSelector.jsx",[],"E:\\practice\\sudoku\\src\\components\\OneRow.jsx",[],"E:\\practice\\sudoku\\src\\components\\SingleBox.jsx",[],"E:\\practice\\sudoku\\src\\components\\Utility.jsx",[],"E:\\practice\\sudoku\\src\\components\\Solve.jsx",["48","49","50"],"import React, { useContext } from \"react\";\r\nimport { VscSettingsGear } from \"react-icons/vsc\";\r\nimport { AppContext } from \"../App\";\r\n\r\nfunction Solve() {\r\n  const { value, setValue, setSolution, initialValue, getCol, getBlock, getBlockAddress } = useContext(AppContext);\r\n  const solveSudoku = () => {\r\n    console.log(\"solving\");\r\n    var solMatrix = Array(9).fill(Array(9).fill([...Array(10).keys()].slice(1).map((elem) => elem.toString())));\r\n\r\n    //there are two solution methods and in order to solve sudoku both method needs to be implemented mulltiple times\r\n    //methodA --> checks the cell against row column and blocks and figures which solutions are possible for the cell\r\n    //methodB --> checks the cell solutions based on the other for related blocks\r\n    const methodA = (startPoint, initial) => {\r\n      var temp = JSON.parse(JSON.stringify(startPoint));\r\n      var tempSol=Array(9).fill(Array(9))\r\n      solMatrix.forEach((row, rowIndex) => {\r\n        row.forEach((col, colIndex) => {\r\n          var filtRow = temp[rowIndex].filter((elem) => elem !== null);\r\n          var filtColumn = getCol(temp, colIndex).filter((elem) => elem !== null);\r\n          var filtBlock = getBlock(temp, getBlockAddress([rowIndex, colIndex])).filter((elem) => elem !== null);\r\n          var tempCell = col.filter((elem) => !filtRow.includes(elem));\r\n          tempCell = tempCell.filter((elem) => !filtColumn.includes(elem));\r\n          tempCell = tempCell.filter((elem) => !filtBlock.includes(elem));\r\n        //   tempSol[rowIndex][colIndex]=tempCell\r\n          if (tempCell.length === 1 && temp[rowIndex][colIndex] === null) {\r\n            temp[rowIndex][colIndex] = tempCell[0];\r\n          }\r\n        });\r\n      });\r\n    //   console.log(tempSol)\r\n    //   tempSol.forEach(elem=>findUnique(elem))\r\n      return temp;\r\n    };\r\n    const findUnique = (arr1) => {\r\n      var ret = [];\r\n      var temp=[];\r\n      ret.forEach(elem=>elem.forEach(ele=>temp.push(ele)))\r\n      console.log(temp)\r\n      return ret;\r\n    };\r\n    setValue(methodA(value, initialValue));\r\n  };\r\n  return (\r\n    <button className=\"btn\" onClick={solveSudoku}>\r\n      <VscSettingsGear /> Solve\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Solve;\r\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":49,"column":7,"nodeType":"57","endLine":49,"endColumn":17,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":6,"column":28,"nodeType":"61","messageId":"62","endLine":6,"endColumn":39},{"ruleId":"59","severity":1,"message":"63","line":16,"column":11,"nodeType":"61","messageId":"62","endLine":16,"endColumn":18},{"ruleId":"59","severity":1,"message":"64","line":35,"column":11,"nodeType":"61","messageId":"62","endLine":35,"endColumn":21},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSelected', 'setValue', and 'value'. Either include them or remove the dependency array.","ArrayExpression",["67"],"no-unused-vars","'setSolution' is assigned a value but never used.","Identifier","unusedVar","'tempSol' is assigned a value but never used.","'findUnique' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [selected, setSelected, setValue, value]",{"range":"70","text":"71"},[1958,1968],"[selected, setSelected, setValue, value]"]