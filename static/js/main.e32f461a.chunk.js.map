{"version":3,"sources":["logo.svg","components/SingleBox.jsx","components/OneRow.jsx","components/WholeGrid.jsx","components/NumberSelector.jsx","components/AllNumSel.jsx","components/Solve.jsx","components/Utility.jsx","App.js","reportWebVitals.js","index.js"],"names":["SingleBox","props","useContext","AppContext","selected","setSelected","value","getCol","getBlock","getBlockAddress","initialValue","useState","row","col","address","classList","length","push","toString","includes","filter","elem","undefined","x","onClick","className","join","OneRow","Array","map","i","index","Fragment","WholeGrid","setValue","useEffect","changeValue","e","test","key","temp","JSON","parse","stringify","preventDefault","uptemp","lefttemp","downtemp","righttemp","temp1","document","addEventListener","removeEventListener","NumberSelector","val","AllNumSel","arr1","window","innerWidth","Solve","setSolution","console","log","solMatrix","fill","keys","slice","findUnique","ret","forEach","ele","elem1","elem2","startPoint","tempSol","rowIndex","tempSol2","colIndex","filtRow","filtColumn","filtBlock","tempCell","methodA","Utility","creator","time","Date","now","toLocaleString","data","React","createContext","App","clickChecker","target","fetch","headers","then","res","json","randSelector","Math","floor","random","database","setInitialValue","catch","err","solution","providerValue","matrix","tempCol","blockAddress","tempBlock","Provider","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e32f461a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState,useContext} from 'react'\r\nimport {AppContext} from '../App'\r\nimport './singleBox.css'\r\n\r\nfunction SingleBox(props) {\r\n    const {selected,setSelected,value,getCol,getBlock,getBlockAddress,initialValue}= useContext(AppContext)\r\n    const [address] = useState([props.row,props.col])\r\n    var classList=[\"singleBox\"]\r\n    //this is for original data - that can not be changed\r\n    if(initialValue.length>0){\r\n        if(initialValue[address[0]][address[1]]!==null){\r\n            // console.log(initialValue[address[0]][address[1]],address)\r\n            classList.push(\"disabledBox\")\r\n        }\r\n    }\r\n    //this adds class to display selected number\r\n    if(selected.toString()===address.toString() && !classList.includes(\"selectedBox\")){\r\n        classList.push(\"selectedBox\")\r\n    }else{\r\n        classList=classList.filter(elem=>elem!==\"selectedBox\")\r\n    }\r\n\r\n    //this adds class to display similar cells\r\n    if(value[address[0]][address[1]]!==null && selected[0]!==undefined){\r\n        if(value[address[0]][address[1]]===value[selected[0]][selected[1]] && address.toString()!==selected.toString()){\r\n            classList.push(\"similarBox\")\r\n        }else{\r\n            classList=classList.filter(elem=>elem!==\"similarBox\")\r\n        }\r\n    }\r\n    //this is for validation and adds class to invalid cells\r\n    //row test\r\n    if(selected[0]!==undefined && value[selected[0]][selected[1]]!==null && address[0]===selected[0] && address[1]!==selected[1]){\r\n        if(value[address[0]].filter(x=>x===value[selected[0]][selected[1]]).length>1 && value[address[0]][address[1]]===value[selected[0]][selected[1]]){\r\n            classList.push(\"dangerBox\")\r\n        }else{\r\n            classList=classList.filter(elem=>elem!==\"dangerBox\")\r\n        }\r\n    }\r\n    //column test\r\n    if(selected[0]!==undefined && value[selected[0]][selected[1]]!==null && address[1]===selected[1] && address[0]!==selected[0]){\r\n        if(getCol(value,selected[1]).filter(x=>x===value[selected[0]][selected[1]]).length>1 && value[address[0]][address[1]]===value[selected[0]][selected[1]]){\r\n            classList.push(\"dangerBox\")\r\n        }else{\r\n            classList=classList.filter(elem=>elem!==\"dangerBox\")\r\n        }\r\n    }\r\n    //block test\r\n    if(selected[0]!==undefined && value[selected[0]][selected[1]]!==null && address[0]!==selected[0] && getBlockAddress(address).toString()===getBlockAddress(selected).toString()){\r\n        if(getBlock(value,getBlockAddress(address)).filter(x=>x===value[address[0]][address[1]]).length>1 && value[address[0]][address[1]]===value[selected[0]][selected[1]]){\r\n            classList.push(\"dangerBox\")\r\n        }else{\r\n            classList=classList.filter(elem=>elem!==\"dangerBox\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div onClick={()=>setSelected(address)} className={classList.join(\" \")}>\r\n            <div className=\"text1\">\r\n                {value[address[0]][address[1]]}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleBox\r\n","import React, { useState } from 'react'\r\nimport SingleBox from './SingleBox'\r\nimport './oneRow.css'\r\n\r\nfunction OneRow(props) {\r\n    const [row] = useState(props.row)\r\n    return (\r\n        <div className=\"oneRow\">\r\n            {[...Array(9)].map((i,index)=>{\r\n                if(index===2||index===5){\r\n                    return <React.Fragment key={index}><SingleBox col={index} row={row} /><div className=\"vLine\"></div></React.Fragment>\r\n                }else{\r\n                    return <SingleBox key={index} col={index} row={row} />\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OneRow\r\n","import React,{useContext,useEffect} from 'react'\r\nimport OneRow from './OneRow'\r\nimport './wholeGrid.css'\r\nimport {AppContext} from '../App'\r\n\r\nfunction WholeGrid() {\r\n    const {selected,setSelected,value,setValue,initialValue} = useContext(AppContext)\r\n    useEffect(() => {\r\n        const changeValue=(e)=>{\r\n            if(selected.length!==0 && selected[0]!==undefined){\r\n                if(/[0-9]/.test(e.key)){\r\n                    var temp=JSON.parse(JSON.stringify(value)) //this is necessary since we have 2d array and deep copy is needed\r\n                    temp[selected[0]][selected[1]]=e.key\r\n                    setValue(temp)\r\n                }\r\n                const tempArr=['ArrowUp','ArrowLeft','ArrowDown','ArrowRight']\r\n                if(tempArr.includes(e.key)){\r\n                    e.preventDefault()\r\n                    switch (e.key) {\r\n                        case \"ArrowUp\":\r\n                            var uptemp=1;\r\n                            if(selected[0]!==0){\r\n                                while (initialValue[selected[0]-uptemp][selected[1]]!==null) {\r\n                                    (selected[0]-uptemp===0)?uptemp=0:uptemp++;\r\n                                }\r\n                            }else{\r\n                                uptemp=0;\r\n                            }\r\n                            selected[0]!==0 && setSelected([selected[0]-uptemp,selected[1]])\r\n                            break;\r\n                        case \"ArrowLeft\":\r\n                            var lefttemp=1;\r\n                            if(selected[1]!==0){\r\n                                while (initialValue[selected[0]][selected[1]-lefttemp]!==null) {\r\n                                    (selected[1]-lefttemp===0) ? lefttemp=0 : lefttemp++\r\n                                }\r\n                            }else{\r\n                                lefttemp=0;\r\n                            }\r\n                            selected[1]!==0 && setSelected([selected[0],selected[1]-lefttemp])\r\n                            break;\r\n                        case \"ArrowDown\":\r\n                            var downtemp=1;\r\n                            if(selected[0]!==8){\r\n                                while (initialValue[selected[0]+downtemp][selected[1]]!==null) {\r\n                                    (selected[0]+downtemp===8) ? downtemp=0 : downtemp++\r\n                                }\r\n                            }else{\r\n                                downtemp=0;\r\n                            }\r\n                            selected[0]!==8 && setSelected([selected[0]+downtemp,selected[1]])\r\n                            break;\r\n                        case \"ArrowRight\":\r\n                            var righttemp=1;\r\n                            if(selected[1]!==8){\r\n                                while (initialValue[selected[0]][selected[1]+righttemp]!==null) {\r\n                                    (selected[1]+righttemp===8)?righttemp=0:righttemp++;\r\n                                }\r\n                            }else{\r\n                                righttemp=0;\r\n                            }\r\n                            selected[1]!==8 && setSelected([selected[0],selected[1]+righttemp])\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                if(e.key===\"Delete\"){\r\n                    var temp1=value\r\n                    temp1[selected[0]][selected[1]]=null\r\n                    setValue([...temp1])\r\n                }\r\n                if(e.key===\"Escape\"){\r\n                    setSelected([])\r\n                }\r\n            }\r\n        }\r\n        document.addEventListener(\"keydown\",changeValue)\r\n        return ()=>{\r\n            document.removeEventListener(\"keydown\",changeValue)\r\n        }\r\n    },[selected])\r\n\r\n    return (\r\n        <div className=\"wholeGrid\">\r\n            {[...Array(9)].map((x,index)=>(index===2||index===5)?<React.Fragment key={index}><OneRow row={index}  /><div className=\"hLine\"></div></React.Fragment>:<OneRow key={index} row={index}  />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WholeGrid\r\n","import React,{useContext} from 'react'\r\nimport {AppContext} from '../App'\r\nimport './numberSelector.css'\r\n\r\nfunction NumberSelector(props) {\r\n    const {value,setValue,selected}=useContext(AppContext)\r\n    const onclick1=()=>{\r\n        if(selected[0]>=0){\r\n            var temp=JSON.parse(JSON.stringify(value))\r\n            if(props.val>=0 && props.val<10){\r\n                temp[selected[0]][selected[1]]=props.val.toString()\r\n            }else{\r\n                temp[selected[0]][selected[1]]=null\r\n            }\r\n            setValue(temp)\r\n        }else{\r\n            \r\n        }\r\n    }\r\n    return (\r\n        <div className=\"numberSelector\" onClick={onclick1}>\r\n            <div className=\"text\">\r\n                {props.val}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NumberSelector\r\n","import React from 'react'\r\nimport NumberSelector from './NumberSelector'\r\nimport './allNumSel.css'\r\nimport { BiEraser,BiReset } from \"react-icons/bi\";\r\n\r\nfunction AllNumSel() {\r\n    var arr1=[7,8,9,4,5,6,1,2,3,<BiEraser />,0,<BiReset />]\r\n    if(window.innerWidth<=600) {\r\n        arr1=[0,1,2,3,4,5,6,7,8,9,<BiEraser />,<BiReset />]\r\n    }\r\n    return (\r\n        <div className=\"allNumSel\">\r\n            {arr1.map((x,index)=>(\r\n                <NumberSelector key={index} val={x}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllNumSel\r\n","import React, { useContext } from \"react\";\r\nimport { VscSettingsGear } from \"react-icons/vsc\";\r\nimport { AppContext } from \"../App\";\r\n\r\nfunction Solve() {\r\n  const { value, setValue, setSolution, initialValue, getCol, getBlock, getBlockAddress } = useContext(AppContext);\r\n  const solveSudoku = () => {\r\n    console.log(\"solving\");\r\n    var solMatrix = Array(9).fill(Array(9).fill([...Array(10).keys()].slice(1).map((elem) => elem.toString())));\r\n\r\n    //there are two solution methods and in order to solve sudoku both method needs to be implemented mulltiple times\r\n    //methodA --> checks the cell against row column and blocks and figures which solutions are possible for the cell\r\n    //methodB --> checks the cell solutions based on the other for related blocks\r\n    const methodA = (startPoint) => {\r\n      var temp = JSON.parse(JSON.stringify(startPoint));\r\n      var tempSol=Array(9).fill([])\r\n      solMatrix.forEach((row, rowIndex) => {\r\n        var tempSol2=[];\r\n        row.forEach((col, colIndex) => {\r\n          var filtRow = temp[rowIndex].filter((elem) => elem !== null);\r\n          var filtColumn = getCol(temp, colIndex).filter((elem) => elem !== null);\r\n          var filtBlock = getBlock(temp, getBlockAddress([rowIndex, colIndex])).filter((elem) => elem !== null);\r\n          var tempCell = col.filter((elem) => !filtRow.includes(elem));\r\n          tempCell = tempCell.filter((elem) => !filtColumn.includes(elem));\r\n          tempCell = tempCell.filter((elem) => !filtBlock.includes(elem));\r\n          tempSol2.push(JSON.parse(JSON.stringify(tempCell)))\r\n          if (tempCell.length === 1 && temp[rowIndex][colIndex] === null) {\r\n            temp[rowIndex][colIndex] = tempCell[0];\r\n          }\r\n        });\r\n        tempSol[rowIndex]=JSON.parse(JSON.stringify(tempSol2));\r\n      });\r\n      // console.log(tempSol)\r\n      tempSol.forEach(elem=>findUnique(elem))\r\n      return temp;\r\n    };\r\n    const findUnique = (arr1) => {\r\n      var ret = JSON.parse(JSON.stringify(arr1));\r\n      var temp=[];\r\n      ret.forEach(elem=>elem.forEach(ele=>temp.push(ele)))\r\n      console.log(temp.filter(elem=>temp.filter(e=>e===elem).length===1))\r\n      ret.map(elem=>elem.filter(elem1=>temp.filter(elem2=>elem2===elem1).length===1))\r\n      return ret;\r\n    };\r\n    setValue(methodA(value));\r\n  };\r\n  return (\r\n    <button className=\"btn\" onClick={solveSudoku}>\r\n      <VscSettingsGear /> Solve\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Solve;\r\n","import React,{useContext} from 'react'\r\nimport {AppContext} from '../App'\r\nimport { BiExport,BiRefresh } from \"react-icons/bi\";\r\nimport './utility.css';\r\nimport Solve from './Solve';\r\n\r\nfunction Utility() {\r\n    const {value,setValue,initialValue} = useContext(AppContext)\r\n    const exportSudoku=()=>{\r\n        const tempDate=new Date(Date.now())\r\n        const temp={\r\n            creator:\"Tanay\",\r\n            time:tempDate.toLocaleString(\"en-GB\"),\r\n            data:value\r\n        }\r\n        console.log(JSON.stringify(temp))\r\n    }\r\n    const resetSudoku=()=>{\r\n        if(initialValue.length>0){\r\n            setValue(initialValue)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"utility\" >\r\n            <button className=\"btn\" onClick={exportSudoku}><BiExport /> Export Sudoku</button>\r\n            <button className=\"btn\" onClick={resetSudoku}><BiRefresh /> Reset</button>\r\n            <Solve />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Utility\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport axios from \"axios\"\r\n// import SingleBox from './components/SingleBox';\r\n// import OneRow from './components/OneRow';\r\nimport WholeGrid from './components/WholeGrid';\r\n// import NumberSelector from './components/NumberSelector';\r\nimport AllNumSel from './components/AllNumSel';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Utility from './components/Utility';\r\nexport const AppContext = React.createContext();\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    const clickChecker = (e) => {\r\n      if(e.target.classList[0]!==\"text1\" && e.target.classList[0]!==\"text\"){\r\n        setSelected([undefined,undefined])\r\n      }\r\n    }\r\n    \r\n    fetch('puzzleList.json', { headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' } })\r\n      .then(res => {\r\n        return res.json()\r\n      })\r\n      .then(res => {\r\n        const randSelector = Math.floor(Math.random() * res.database.length)\r\n        const tempData = res.database[randSelector].data\r\n        if (tempData !== undefined) {\r\n          setInitialValue(res.database[randSelector].data)\r\n        }\r\n      }).catch(err => { console.log(\"File could not be loaded for some reason!\", err) })\r\n    document.addEventListener(\"click\", clickChecker)\r\n    return () => {\r\n      document.removeEventListener(\"click\", clickChecker)\r\n    }\r\n  }, [])\r\n\r\n  const [selected, setSelected] = useState([undefined, undefined])\r\n  const [value, setValue] = useState(Array(9).fill(Array(9).fill(null)))\r\n  const [initialValue, setInitialValue] = useState(Array(9).fill(Array(9).fill(null)))\r\n  const [solution, setSolution] = useState(Array(9).fill(Array(9).fill([])))\r\n  useEffect(() => {\r\n    if (initialValue.length > 0)\r\n      setValue([...initialValue])\r\n  }, [initialValue])\r\n  const getCol = (matrix,col) => {\r\n    var tempCol = []\r\n    matrix.forEach(elem => { tempCol.push(elem[col]) })\r\n    return tempCol\r\n  }\r\n  const getBlock = (matrix,blockAddress) => {\r\n    var tempBlock = []\r\n    matrix.forEach((elem, index) => {\r\n      if (index < blockAddress[0] * 3 && index >= (blockAddress[0] - 1) * 3) {\r\n        tempBlock.push(...elem.slice((blockAddress[1] - 1) * 3, blockAddress[1] * 3))\r\n      }\r\n    })\r\n    return tempBlock\r\n  }\r\n  const getBlockAddress = (address) => {\r\n    var tempRow = Math.floor(address[0] / 3 + 1)\r\n    var tempCol = Math.floor(address[1] / 3 + 1)\r\n    return [tempRow, tempCol]\r\n  }\r\n  const providerValue = { selected, setSelected, value, setValue, getCol, getBlock, getBlockAddress, initialValue,solution,setSolution }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AppContext.Provider value={providerValue}>\r\n        <div className=\"appHeader\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <h1 className=\"title\">Sudoku</h1>\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </div>\r\n        <div className=\"mainGame\">\r\n          <WholeGrid />\r\n          <AllNumSel />\r\n          <Utility />\r\n        </div>\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}