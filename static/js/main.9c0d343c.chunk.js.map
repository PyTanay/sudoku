{"version":3,"sources":["logo.svg","components/SingleBox.jsx","components/OneRow.jsx","components/WholeGrid.jsx","components/NumberSelector.jsx","components/Solve.jsx","components/Utility.jsx","components/AllNumSel.jsx","components/TimerBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["SingleBox","props","useContext","AppContext","selected","setSelected","value","getCol","getBlock","getBlockAddress","initialValue","path","setPath","solution","displayError","useState","row","col","address","check","setCheck","classList","pervValueRef","useRef","useEffect","current","prevValue","undefined","currVal","prevVal","data","tempPath","JSON","parse","stringify","push","length","toString","includes","filter","elem","x","onClick","className","join","OneRow","Array","map","i","index","Fragment","WholeGrid","setValue","changeValue","e","test","key","temp","preventDefault","uptemp","lefttemp","downtemp","righttemp","temp1","document","addEventListener","removeEventListener","NumberSelector","dataTip","val","tip","data-tip","effect","delayShow","border","borderColor","Solve","setSolution","setDisplayError","Popup","timerMethods","time","solving","setSolving","counter","setCounter","from","solMatrix","setSolMatrix","setTimeout","methodA","isFinished","console","log","isEmpty","remaining","forEach","rowIndex","colIndex","confetti","particleCount","startVelocity","spread","origin","Math","random","y","pause","create","title","content","hour","min","sec","buttons","left","text","action","close","right","alert","isCompleted","matrix","count","currentVal","currArr","startPoint","tempSol","fill","tempSol2","filtRow","filtColumn","filtBlock","tempCell","crossRef","findUniqueFromMatrix","cleanUpSolMatrix","tempMatrix","rowArr","colArr","blockArr","findUniquePair","valArr","arr1","tempArr","elem1","elem2","rowResult","findUniqueFromArr","colResult","blockResult","ret","ele","uniqDigit","Utility","creator","Date","now","toLocaleString","reset","start","AllNumSel","window","innerWidth","TimerBox","setTimerMethods","setTime","resume","stop","timerState","Hours","formatValue","Minutes","Seconds","React","createContext","App","clickChecker","target","fetch","headers","then","res","json","randSelector","floor","database","setInitialValue","catch","err","providerValue","tempCol","blockAddress","tempBlock","slice","getElementById","Provider","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9c0d343c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport \"./singleBox.css\";\r\n\r\nfunction SingleBox(props) {\r\n  const { selected, setSelected, value, getCol, getBlock, getBlockAddress, initialValue, path, setPath, solution,displayError } = useContext(\r\n    AppContext\r\n  );\r\n  const [address] = useState([props.row, props.col]);\r\n  const [check, setCheck] = useState(displayError)\r\n  var classList = [\"singleBox\"];\r\n  const pervValueRef = useRef();\r\n  useEffect(() => {\r\n    pervValueRef.current = value;\r\n  });\r\n  useEffect(() => {\r\n      setCheck(displayError)\r\n  }, [displayError])\r\n  const prevValue = pervValueRef.current;\r\n  useEffect(() => {\r\n    if (prevValue !== undefined) {\r\n      const currVal = value[props.row][props.col];\r\n      const prevVal = prevValue[props.row][props.col];\r\n      if (currVal !== prevVal && initialValue[props.row][props.col] === null) {\r\n        const data = { row: props.row, col: props.col, currVal, prevVal };\r\n        const tempPath = JSON.parse(JSON.stringify(path));\r\n        tempPath.push(data);\r\n        setPath(tempPath);\r\n        // console.log(`Address ${props.row},${props.col} changed from ${prevVal} to ${currVal}`)\r\n      }\r\n    }\r\n  }, [value]);\r\n  //this is for original data - that can not be changed\r\n  if (initialValue.length > 0) {\r\n    if (initialValue[address[0]][address[1]] !== null) {\r\n      // console.log(initialValue[address[0]][address[1]],address)\r\n      classList.push(\"disabledBox\");\r\n    }\r\n  }\r\n\r\n  //this adds class to display selected number\r\n  if (selected.toString() === address.toString() && !classList.includes(\"selectedBox\")) {\r\n    classList.push(\"selectedBox\");\r\n  } else {\r\n    classList = classList.filter((elem) => elem !== \"selectedBox\");\r\n  }\r\n  //this adds class to display mistakes you have made compared to solution\r\n  if (check && value[address[0]][address[1]] !== solution[address[0]][address[1]] &&\r\n    value[address[0]][address[1]] !== null &&\r\n    !classList.includes(\"errorBox\") &&\r\n    !classList.includes(\"disabledBox\")) {\r\n    // console.log(\"Pushing error box\");\r\n    // classList=classList.filter(elem=>elem!==\"\")\r\n    classList.push(\"errorBox\");\r\n    // console.log(classList);\r\n  } else {\r\n    classList = classList.filter((elem) => elem !== \"errorBox\");\r\n  }\r\n\r\n  //this adds class to display similar cells\r\n  if (value[address[0]][address[1]] !== null && selected[0] !== undefined) {\r\n    if (value[address[0]][address[1]] === value[selected[0]][selected[1]] && address.toString() !== selected.toString()) {\r\n      classList.push(\"similarBox\");\r\n    } else {\r\n      classList = classList.filter((elem) => elem !== \"similarBox\");\r\n    }\r\n  }\r\n  //this is for validation and adds class to invalid cells\r\n  //row test\r\n  if (\r\n    selected[0] !== undefined &&\r\n    value[selected[0]][selected[1]] !== null &&\r\n    address[0] === selected[0] &&\r\n    address[1] !== selected[1]\r\n  ) {\r\n    if (\r\n      value[address[0]].filter((x) => x === value[selected[0]][selected[1]]).length > 1 &&\r\n      value[address[0]][address[1]] === value[selected[0]][selected[1]]\r\n    ) {\r\n      classList.push(\"dangerBox\");\r\n    } else {\r\n      classList = classList.filter((elem) => elem !== \"dangerBox\");\r\n    }\r\n  }\r\n  //column test\r\n  if (\r\n    selected[0] !== undefined &&\r\n    value[selected[0]][selected[1]] !== null &&\r\n    address[1] === selected[1] &&\r\n    address[0] !== selected[0]\r\n  ) {\r\n    if (\r\n      getCol(value, selected[1]).filter((x) => x === value[selected[0]][selected[1]]).length > 1 &&\r\n      value[address[0]][address[1]] === value[selected[0]][selected[1]]\r\n    ) {\r\n      classList.push(\"dangerBox\");\r\n    } else {\r\n      classList = classList.filter((elem) => elem !== \"dangerBox\");\r\n    }\r\n  }\r\n  //block test\r\n  if (\r\n    selected[0] !== undefined &&\r\n    value[selected[0]][selected[1]] !== null &&\r\n    address[0] !== selected[0] &&\r\n    getBlockAddress(address).toString() === getBlockAddress(selected).toString()\r\n  ) {\r\n    if (\r\n      getBlock(value, getBlockAddress(address)).filter((x) => x === value[address[0]][address[1]]).length > 1 &&\r\n      value[address[0]][address[1]] === value[selected[0]][selected[1]]\r\n    ) {\r\n      classList.push(\"dangerBox\");\r\n    } else {\r\n      classList = classList.filter((elem) => elem !== \"dangerBox\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div onClick={() => setSelected(address)} className={classList.join(\" \")}>\r\n      <div className=\"text1\">{value[address[0]][address[1]]}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleBox;\r\n","import React, { useState } from 'react'\r\nimport SingleBox from './SingleBox'\r\nimport './oneRow.css'\r\n\r\nfunction OneRow(props) {\r\n    const [row] = useState(props.row)\r\n    return (\r\n        <div className=\"oneRow\">\r\n            {[...Array(9)].map((i,index)=>{\r\n                if(index===2||index===5){\r\n                    return <React.Fragment key={index}><SingleBox col={index} row={row} /><div className=\"vLine\"></div></React.Fragment>\r\n                }else{\r\n                    return <SingleBox key={index} col={index} row={row} />\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OneRow\r\n","import React,{useContext,useEffect} from 'react'\r\nimport OneRow from './OneRow'\r\nimport './wholeGrid.css'\r\nimport {AppContext} from '../App'\r\n\r\nfunction WholeGrid() {\r\n    const {selected,setSelected,value,setValue,initialValue} = useContext(AppContext)\r\n    useEffect(() => {\r\n        const changeValue=(e)=>{\r\n            if(selected.length!==0 && selected[0]!==undefined){\r\n                if(/[1-9]/.test(e.key)){\r\n                    var temp=JSON.parse(JSON.stringify(value)) //this is necessary since we have 2d array and deep copy is needed\r\n                    temp[selected[0]][selected[1]]=e.key\r\n                    setValue(temp)\r\n                }\r\n                const tempArr=['ArrowUp','ArrowLeft','ArrowDown','ArrowRight']\r\n                if(tempArr.includes(e.key)){\r\n                    e.preventDefault()\r\n                    switch (e.key) {\r\n                        case \"ArrowUp\":\r\n                            var uptemp=1;\r\n                            if(selected[0]!==0){\r\n                                while (initialValue[selected[0]-uptemp][selected[1]]!==null) {\r\n                                    (selected[0]-uptemp===0)?uptemp=0:uptemp++;\r\n                                }\r\n                            }else{\r\n                                uptemp=0;\r\n                            }\r\n                            selected[0]!==0 && setSelected([selected[0]-uptemp,selected[1]])\r\n                            break;\r\n                        case \"ArrowLeft\":\r\n                            var lefttemp=1;\r\n                            if(selected[1]!==0){\r\n                                while (initialValue[selected[0]][selected[1]-lefttemp]!==null) {\r\n                                    (selected[1]-lefttemp===0) ? lefttemp=0 : lefttemp++\r\n                                }\r\n                            }else{\r\n                                lefttemp=0;\r\n                            }\r\n                            selected[1]!==0 && setSelected([selected[0],selected[1]-lefttemp])\r\n                            break;\r\n                        case \"ArrowDown\":\r\n                            var downtemp=1;\r\n                            if(selected[0]!==8){\r\n                                while (initialValue[selected[0]+downtemp][selected[1]]!==null) {\r\n                                    (selected[0]+downtemp===8) ? downtemp=0 : downtemp++\r\n                                }\r\n                            }else{\r\n                                downtemp=0;\r\n                            }\r\n                            selected[0]!==8 && setSelected([selected[0]+downtemp,selected[1]])\r\n                            break;\r\n                        case \"ArrowRight\":\r\n                            var righttemp=1;\r\n                            if(selected[1]!==8){\r\n                                while (initialValue[selected[0]][selected[1]+righttemp]!==null) {\r\n                                    (selected[1]+righttemp===8)?righttemp=0:righttemp++;\r\n                                }\r\n                            }else{\r\n                                righttemp=0;\r\n                            }\r\n                            selected[1]!==8 && setSelected([selected[0],selected[1]+righttemp])\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                if(e.key===\"Delete\"){\r\n                    var temp1=value\r\n                    temp1[selected[0]][selected[1]]=null\r\n                    setValue([...temp1])\r\n                }\r\n                if(e.key===\"Escape\"){\r\n                    setSelected([])\r\n                }\r\n            }\r\n        }\r\n        document.addEventListener(\"keydown\",changeValue)\r\n        return ()=>{\r\n            document.removeEventListener(\"keydown\",changeValue)\r\n        }\r\n    },[selected])\r\n\r\n    return (\r\n        <div className=\"wholeGrid\">\r\n            {[...Array(9)].map((x,index)=>(index===2||index===5)?<React.Fragment key={index}><OneRow row={index}  /><div className=\"hLine\"></div></React.Fragment>:<OneRow key={index} row={index}  />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WholeGrid\r\n","import React,{useContext} from 'react'\r\nimport {AppContext} from '../App'\r\nimport './numberSelector.css'\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nfunction NumberSelector(props) {\r\n    const {value,setValue,selected}=useContext(AppContext)\r\n    const onclick1=()=>{\r\n        if(selected[0]>=0){\r\n            var temp=JSON.parse(JSON.stringify(value))\r\n            // console.log(props.val.type.name)\r\n            if(props.val>=0 && props.val<10){\r\n                temp[selected[0]][selected[1]]=props.val.toString()\r\n            }else if(props.val.props.tip===\"Delete\"){\r\n                temp[selected[0]][selected[1]]=null\r\n            }else{\r\n                // temp[selected[0]][selected[1]]=null\r\n            }\r\n            setValue(temp)\r\n        }else{\r\n            \r\n        }\r\n    }\r\n    const dataTip=(props.val>=0 && props.val<10) ? null : props.val.props.tip\r\n    return (\r\n        <div className=\"numberSelector\" onClick={onclick1}>\r\n            <div className=\"text\" data-tip={dataTip}>\r\n                <ReactTooltip effect=\"solid\" delayShow={500} border={true} borderColor=\" rgb(56, 125, 204)\"/>\r\n                {props.val}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NumberSelector\r\n","import React, { useContext,useEffect,useState } from \"react\";\r\nimport { FiCheckCircle } from \"react-icons/fi\";\r\nimport { AppContext } from \"../App\";\r\nimport confetti from 'canvas-confetti'\r\n\r\nfunction Solve() {\r\n  const { value,initialValue, getCol, getBlock, getBlockAddress,solution,setSolution, setDisplayError,Popup,timerMethods,time } = useContext(AppContext);\r\n  const [solving, setSolving] = useState(false)\r\n  const [counter, setCounter] = useState(1)\r\n  const [solMatrix, setSolMatrix] = useState(Array.from({length: 9},()=> Array.from({length: 9}, () => Array.from(\"123456789\"))))\r\n\r\n  const solveSudoku =() => {\r\n    setSolving(true)\r\n    setSolution(methodA(value))\r\n  };\r\n  useEffect(() => {\r\n    setTimeout(()=>{\r\n      solveSudoku()\r\n    },200)\r\n  },[])\r\n  useEffect(() => {\r\n    if(isFinished(solution)===false && counter<20 && solving===true){\r\n      // console.log(solMatrix,\"Iteration\",counter)\r\n      setSolution(methodA(solution))\r\n      setCounter(counter+1)\r\n    }else if(isFinished(solution)===true){\r\n      console.log(\"Sudoku successfully solved\")\r\n      setSolution(solution)\r\n      // Popup.alert(\"Congratulations Sudoku was solved by computer.\")\r\n      setSolving(false)\r\n      setCounter(1)\r\n    }else if(counter===20){\r\n      console.log(\"Maximum iteration reached, Could not solve the sudoku.\")\r\n      console.log(solution)\r\n      setSolving(false)\r\n      setCounter(1)\r\n    }else{\r\n      console.log(\"something's wrong\")\r\n      setSolving(false)\r\n      setCounter(1)\r\n    }\r\n  }, [solution])\r\n\r\n  const isCompleted=(value)=>{\r\n    var remaining=0;\r\n    value.forEach((row,rowIndex)=>{\r\n      row.forEach((col,colIndex)=>{\r\n        if(col!==solution[rowIndex][colIndex]){\r\n          remaining++\r\n        }\r\n      })\r\n    })\r\n    if(remaining===0){\r\n      for(var i=0;i<6;i++){\r\n        setTimeout(()=>confetti({particleCount: 100,startVelocity: 30,spread: 360,origin: {x: Math.random(),y: Math.random() - 0.2}}),500*i)\r\n      }\r\n      timerMethods.pause()\r\n      setTimeout(() => {\r\n        Popup.create({\r\n          title: 'Congratualtions!!!',\r\n          content: `You finished the sudoku correctly in ${time.hour!==0?time.hour+\" h\":\"\"} ${time.min!==0?time.min+\" m\":\"\"} ${time.sec!==0?time.sec+\" s\":\"\"}`,\r\n          buttons: {\r\n              left: [{\r\n                  text: 'Cancel',\r\n                  className: 'danger',\r\n                  action: function () {\r\n                      /** Close this popup. Close will always close the current visible one, if one is visible */\r\n                      Popup.close();\r\n                  }\r\n              }],\r\n              right: [{\r\n                text: 'New Sudoku',\r\n                className: 'success',\r\n                action: function () {\r\n                    Popup.alert('Now you will be redirected to new puzzle.');\r\n    \r\n                    /** Close this popup. Close will always close the current visible one, if one is visible */\r\n                    Popup.close();\r\n                }\r\n            }]\r\n            }\r\n        })\r\n      }, 2000);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if(!isEmpty(initialValue))\r\n    isCompleted(value)\r\n  }, [value])\r\n  const isEmpty=(matrix)=>{\r\n    var count=0;\r\n    matrix.forEach(row=>{\r\n      row.forEach(col=>{\r\n        if(col===null)count++\r\n      })\r\n    })\r\n    return (count===81)?true:false\r\n  }\r\n  const isFinished = (currentVal) => {\r\n    var currArr = [];\r\n    currentVal.forEach((row) => {\r\n      row.forEach((col) => currArr.push(col));\r\n    });\r\n    currArr = currArr.filter((elem) => elem === null);\r\n    return currArr.length === 0 ? true : false;\r\n  };\r\n  //there are two solution methods and in order to solve sudoku both method needs to be implemented mulltiple times\r\n  //methodA --> checks the cell against row column and blocks and figures which solutions are possible for the cell\r\n  //methodB --> checks the cell solutions based on the other for related blocks\r\n  const methodA =(startPoint) => {\r\n    var temp = JSON.parse(JSON.stringify(startPoint));\r\n    var tempSol = Array(9).fill([]);\r\n    // console.log(solMatrix)\r\n    solMatrix.forEach((row, rowIndex) => {\r\n      var tempSol2 = [];\r\n      row.forEach((col, colIndex) => {\r\n        if (value[rowIndex][colIndex] === null) {\r\n          var filtRow = temp[rowIndex].filter((elem) => elem !== null).filter(elem=>elem!==temp[rowIndex][colIndex]);\r\n          var filtColumn = getCol(temp, colIndex).filter((elem) => elem !== null).filter(elem=>elem!==temp[rowIndex][colIndex]);\r\n          var filtBlock = getBlock(temp, getBlockAddress([rowIndex, colIndex])).filter((elem) => elem !== null).filter(elem=>elem!==temp[rowIndex][colIndex]);\r\n          var tempCell = col.filter((elem) => !filtRow.includes(elem));\r\n          tempCell = tempCell.filter((elem) => !filtColumn.includes(elem));\r\n          tempCell = tempCell.filter((elem) => !filtBlock.includes(elem));\r\n        } else {\r\n          tempCell = [value[rowIndex][colIndex]];\r\n        }\r\n        tempSol2.push(JSON.parse(JSON.stringify(tempCell)));\r\n        if (tempCell.length === 1 && temp[rowIndex][colIndex] === null) {\r\n          temp[rowIndex][colIndex] = tempCell[0];\r\n        }\r\n      });\r\n      tempSol[rowIndex] = JSON.parse(JSON.stringify(tempSol2));\r\n    });\r\n    \r\n    tempSol.forEach((row, rowIndex) =>{\r\n      row.forEach((col, colIndex) => {\r\n        var crossRef = findUniqueFromMatrix(col, tempSol, rowIndex, colIndex);\r\n        if (crossRef !== null && temp[rowIndex][colIndex] === null) {\r\n          temp[rowIndex][colIndex] = crossRef;\r\n          tempSol[rowIndex][colIndex]=[crossRef]\r\n        }\r\n        // console.log(rowIndex,colIndex,findUniqueFromMatrix(col,tempSol,rowIndex,colIndex))\r\n      })\r\n    });\r\n    cleanUpSolMatrix(tempSol)\r\n    return temp;\r\n  };\r\n  const cleanUpSolMatrix=(matrix)=>{\r\n    var tempMatrix=JSON.parse(JSON.stringify(matrix));\r\n    tempMatrix.forEach((row,rowIndex)=>{\r\n      row.forEach((col,colIndex)=>{\r\n        // var col=JSON.parse(JSON.stringify(col))\r\n        const rowArr = tempMatrix[rowIndex];\r\n        const colArr = getCol(tempMatrix, colIndex);\r\n        const blockArr = getBlock(tempMatrix, getBlockAddress([rowIndex, colIndex]));\r\n        // console.log(\"Address\",rowIndex,colIndex)\r\n        col=findUniquePair(col,rowArr)\r\n        col=findUniquePair(col,colArr)\r\n        col=findUniquePair(col,blockArr)\r\n        tempMatrix[rowIndex][colIndex]=col\r\n      })\r\n    })\r\n    // console.log(tempMatrix.map(elem=>elem.map(elem1=>elem1.toString())))\r\n    setSolMatrix(tempMatrix)\r\n    // console.log(solMatrix.map(elem=>elem.map(elem1=>elem1.toString())))\r\n\r\n    // solMatrix=tempMatrix\r\n  }\r\n  const findUniquePair=(valArr,arr1)=>{\r\n    var tempArr=JSON.parse(JSON.stringify(valArr))\r\n    var temp=[]\r\n    arr1.forEach(elem=>{\r\n      if(elem.length===2 && arr1.filter(elem1=>elem1.toString()===elem.toString()).length===2){\r\n        if(elem.toString()!==tempArr.toString()){\r\n          if(!temp.includes(elem[0]) && !temp.includes(elem[1])){\r\n            temp.push(elem[0])\r\n            temp.push(elem[1])\r\n          }\r\n        }\r\n      }\r\n    })\r\n    // console.log(temp)\r\n    tempArr=tempArr.filter(elem2=>!temp.includes(elem2))\r\n    return tempArr\r\n  }\r\n  const findUniqueFromMatrix = (valArr, matrix, row, col) => {\r\n    var tempMatrix = JSON.parse(JSON.stringify(matrix));\r\n    const rowResult = findUniqueFromArr(valArr, tempMatrix[row]);\r\n    const colResult = findUniqueFromArr(valArr, getCol(tempMatrix, col));\r\n    const blockResult = findUniqueFromArr(valArr, getBlock(tempMatrix, getBlockAddress([row, col])));\r\n    // console.log(rowResult?rowResult: colResult ? colResult : blockResult ? blockResult : null,row,col)\r\n    return rowResult ? rowResult : colResult ? colResult : blockResult ? blockResult : null;\r\n  };\r\n  const findUniqueFromArr = (valArr, arr1) => {\r\n    var ret = JSON.parse(JSON.stringify(arr1));\r\n    var temp = [];\r\n    ret.forEach((elem) => elem.forEach((ele) => temp.push(ele)));\r\n    var uniqDigit = [];\r\n    valArr.forEach((elem) => temp.filter((e) => e === elem).length === 1 && uniqDigit.push(elem));\r\n    return uniqDigit.toString();\r\n  };\r\n  const checkSudoku=()=>{\r\n    setDisplayError(true)\r\n    setTimeout(()=>{\r\n      setDisplayError(false)\r\n    },2000)\r\n  }\r\n  return (\r\n    <button className=\"btn\" onClick={checkSudoku}>\r\n      <FiCheckCircle /> Check\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Solve;\r\n","import React,{useContext} from 'react'\r\nimport {AppContext} from '../App'\r\nimport { BiExport,BiRefresh } from \"react-icons/bi\";\r\nimport './utility.css';\r\nimport Solve from './Solve';\r\n\r\n\r\nfunction Utility() {\r\n    const {value,setValue,initialValue,timerMethods} = useContext(AppContext)\r\n    const exportSudoku=()=>{\r\n        const tempDate=new Date(Date.now())\r\n        const temp={\r\n            creator:\"Tanay\",\r\n            time:tempDate.toLocaleString(\"en-GB\"),\r\n            data:value\r\n        }\r\n        console.log(JSON.stringify(temp))\r\n    }\r\n    const resetSudoku=()=>{\r\n        if(initialValue.length>0){\r\n            setValue(initialValue)\r\n            timerMethods.reset()\r\n            timerMethods.start()\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"utility\" >\r\n            <button className=\"btn\" onClick={exportSudoku}><BiExport /> Export Sudoku</button>\r\n            <button className=\"btn\" onClick={resetSudoku}><BiRefresh /> Reset</button>\r\n            <Solve />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Utility\r\n","import React from 'react'\r\nimport NumberSelector from './NumberSelector'\r\nimport './allNumSel.css'\r\nimport { BiEraser } from \"react-icons/bi\";\r\nimport { AiFillStepBackward,AiFillStepForward } from \"react-icons/ai\";\r\nimport Utility from './Utility';\r\n\r\nfunction AllNumSel() {\r\n    var arr1=[1,2,3,4,5,6,7,8,9,<BiEraser tip=\"Delete\"/>,<AiFillStepBackward tip=\"Step Back\" />,<AiFillStepForward tip=\"Step Forward\" />]\r\n    if(window.innerWidth<=600) {\r\n        arr1=[1,2,3,4,5,6,7,8,9,<AiFillStepBackward tip=\"Step Back\" />,<BiEraser tip=\"Delete\"/>,<AiFillStepForward tip=\"Step Forward\"/>]\r\n    }\r\n    return (\r\n        <div className=\"allNumSel\">\r\n            {arr1.map((x,index)=>(\r\n                <NumberSelector key={index} val={x}/>\r\n            ))}\r\n            <Utility />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllNumSel\r\n","import React,{useContext} from 'react'\r\nimport './timerBox.css'\r\nimport Timer from  'react-compound-timer'\r\nimport {AppContext} from '../App'\r\n\r\nfunction TimerBox() {\r\n    const {timerMethods, setTimerMethods,time,setTime} = useContext(AppContext)\r\n\r\n    return (\r\n        <div className=\"pillBox\">\r\n            <Timer>\r\n                {({start, resume, pause, stop, reset, timerState})=>{\r\n                    if(timerMethods.start===undefined){\r\n                        setTimerMethods({start, resume, pause, stop, reset, timerState})\r\n                    }\r\n                    return <>\r\n                        Timer :\r\n                        <Timer.Hours formatValue={value =>{\r\n                            var temp={...time}\r\n                            if(value!==0){\r\n                                if(temp.hour!==value){\r\n                                    temp.hour=value\r\n                                    setTime(temp)\r\n                                }\r\n                                return ` ${value} h`\r\n                            }else{\r\n                                return null\r\n                            }\r\n                        }} />\r\n                        <Timer.Minutes formatValue={value =>{\r\n                            var temp={...time}\r\n                            if(value!==0){\r\n                                if(temp.min!==value){\r\n                                    temp.min=value\r\n                                    setTime(temp)\r\n                                }\r\n                                return ` ${value} m`\r\n                            }else{\r\n                                return null\r\n                            }\r\n                        }} />\r\n                        <Timer.Seconds formatValue={value =>{\r\n                            var temp={...time}\r\n                            if(value!==0){\r\n                                if(temp.sec!==value){\r\n                                    temp.sec=value\r\n                                    setTime(temp)\r\n                                }\r\n                                return ` ${value} s`\r\n                            }else{\r\n                                return null\r\n                            }\r\n                        }} />\r\n                        {/* <Timer.Minutes formatValue={value =>value!==0 ?` ${value} m`:null} /> */}\r\n                        {/* <Timer.Seconds formatValue={value => ` ${value} s`} /> */}\r\n                    </>\r\n                }}\r\n                \r\n            </Timer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimerBox\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\n// import SingleBox from './components/SingleBox';\r\n// import OneRow from './components/OneRow';\r\nimport WholeGrid from './components/WholeGrid';\r\n// import NumberSelector from './components/NumberSelector';\r\nimport AllNumSel from './components/AllNumSel';\r\nimport React, { useState, useEffect } from 'react';\r\n// import Utility from './components/Utility';\r\nimport TimerBox from './components/TimerBox';\r\nimport Popup from 'react-popup';\r\nimport './components/popUp.css'\r\n\r\nexport const AppContext = React.createContext();\r\n\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    const clickChecker = (e) => {\r\n      if(e.target.classList[0]!==\"text1\" && e.target.classList[0]!==\"text\"){\r\n        setSelected([undefined,undefined])\r\n      }\r\n    }\r\n    \r\n    fetch('puzzleList.json', { headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' } })\r\n      .then(res => {\r\n        return res.json()\r\n      })\r\n      .then(res => {\r\n        const randSelector = Math.floor(Math.random() * res.database.length)\r\n        const tempData = res.database[randSelector].data\r\n        if (tempData !== undefined) {\r\n          setInitialValue(res.database[randSelector].data)\r\n        }\r\n      }).catch(err => { console.log(\"File could not be loaded for some reason!\", err) })\r\n    document.addEventListener(\"click\", clickChecker)\r\n    return () => {\r\n      document.removeEventListener(\"click\", clickChecker)\r\n    }\r\n  }, [])\r\n\r\n  const [selected, setSelected] = useState([undefined, undefined])\r\n  const [value, setValue] = useState(Array(9).fill(Array(9).fill(null)))\r\n  const [initialValue, setInitialValue] = useState(Array(9).fill(Array(9).fill(null)))\r\n  const [solution, setSolution] = useState(Array(9).fill(Array(9).fill(null)))\r\n  const [displayError, setDisplayError] = useState(false)\r\n  const [path, setPath] = useState([])\r\n  const [timerMethods, setTimerMethods] = useState({})\r\n  const [time, setTime] = useState({hour:0,min:0,sec:0})\r\n  \r\n  useEffect(() => {\r\n    if (initialValue.length > 0)\r\n      setValue([...initialValue])\r\n    }, [initialValue])\r\n  const getCol = (matrix,col) => {\r\n    var tempCol = []\r\n    matrix.forEach(elem => { tempCol.push(elem[col]) })\r\n    return tempCol\r\n  }\r\n  const getBlock = (matrix,blockAddress) => {\r\n    var tempBlock = []\r\n    matrix.forEach((elem, index) => {\r\n      if (index < blockAddress[0] * 3 && index >= (blockAddress[0] - 1) * 3) {\r\n        tempBlock.push(...elem.slice((blockAddress[1] - 1) * 3, blockAddress[1] * 3))\r\n      }\r\n    })\r\n    return tempBlock\r\n  }\r\n  const getBlockAddress = (address) => {\r\n    var tempRow = Math.floor(address[0] / 3 + 1)\r\n    var tempCol = Math.floor(address[1] / 3 + 1)\r\n    return [tempRow, tempCol]\r\n  }\r\n  \r\n  const providerValue = { selected, setSelected, value, setValue, getCol, getBlock, getBlockAddress,\r\n     initialValue,solution,setSolution,path,setPath,displayError, setDisplayError,timerMethods, setTimerMethods,Popup,\r\n    time,setTime}\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Popup />\r\n      {document.getElementById('popupContainer')}\r\n      <AppContext.Provider value={providerValue}>\r\n        <div className=\"appHeader\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <h1 className=\"title\">Sudoku</h1>\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </div>\r\n        <div className=\"iconBar\">\r\n          <TimerBox />\r\n        </div>\r\n        <div className=\"mainGame\">\r\n          <WholeGrid />\r\n          <AllNumSel />\r\n          {/* <Utility /> */}\r\n        </div>\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}